version: '3.8'

services:
  # PaddleOCR Service
  paddleocr:
    build:
      context: src/models/paddleocr
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./samples:/app/samples:ro
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # YOLOv9 Service
  yolov9:
    build:
      context: src/models/yolov9
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./samples:/app/samples:ro
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # LLaVA-1.5 Service (future)
  llava15:
    build:
      context: src/models/llava15
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./samples:/app/samples:ro
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '2.0'
    profiles:
      - llava15

  # BLIP Service (future)
  blip:
    build:
      context: src/models/blip
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./samples:/app/samples:ro
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: '1.0'
    profiles:
      - blip

  # API Gateway (future)
  gateway:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - paddleocr
      - yolov9
    profiles:
      - gateway

networks:
  default:
    name: vision-models-network