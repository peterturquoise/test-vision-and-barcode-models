# C++ ZXing CGO Memory Worker (OpenCV + ZXing-CPP + Go)
FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    curl \
    pkg-config \
    libopencv-dev \
    libopencv-contrib-dev \
    && rm -rf /var/lib/apt/lists/*

# Install ZXing-CPP (standalone, no Boost)
RUN git clone --depth 1 https://github.com/nu-book/zxing-cpp.git /tmp/zxing-cpp && \
    cd /tmp/zxing-cpp && \
    mkdir build && \
    cd build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DBUILD_EXAMPLES=ON -DBUILD_BENCHMARKS=OFF && \
    make -j$(nproc) && \
    make install && \
    ldconfig && \
    cd / && \
    rm -rf /tmp/zxing-cpp

# Install Go
RUN curl -L https://go.dev/dl/go1.21.0.linux-amd64.tar.gz -o go.tar.gz && \
    tar -C /usr/local -xzf go.tar.gz && \
    rm go.tar.gz

ENV PATH="/usr/local/go/bin:${PATH}"
ENV GOPATH="/go"
ENV GOCACHE="/go/cache"
ENV CGO_ENABLED=1

# Set OpenCV environment variables for CGO
ENV PKG_CONFIG_PATH="/usr/lib/x86_64-linux-gnu/pkgconfig:${PKG_CONFIG_PATH}"
ENV CGO_CPPFLAGS="-I/usr/include/opencv4"
ENV CGO_LDFLAGS="-lopencv_core -lopencv_imgproc -lopencv_imgcodecs -lopencv_objdetect -lZXing"

WORKDIR /app

# Copy source files
COPY cpp_memory_worker_cgo_simple.go ./
COPY cpp_processor.cpp ./
COPY cpp_processor.h ./
COPY test_image.jpeg ./

# Compile C++ processor first
RUN g++ -std=c++17 -fPIC -shared -o libcpp_processor.so cpp_processor.cpp \
    -I/usr/include/opencv4 \
    -lopencv_core -lopencv_imgproc -lopencv_imgcodecs -lopencv_objdetect -lZXing

# Initialize Go module and install dependencies
RUN go mod init cpp-memory-worker-cgo
RUN go get github.com/streadway/amqp

# Build the Go application with CGO
RUN go build -o cpp_memory_worker_cgo cpp_memory_worker_cgo_simple.go

# Set library path for runtime
ENV LD_LIBRARY_PATH="/app:${LD_LIBRARY_PATH}"

# Create app user
RUN useradd -m -s /bin/bash appuser
RUN chown -R appuser:appuser /app

USER appuser

# Command to run the application
CMD ["./cpp_memory_worker_cgo"]
